import csv
from typing import List, Dict, Any


def save_to_detailed_csv(image: str, vulnerabilities: List[Dict[str, Any]], csv_writer: csv.DictWriter) -> None:
    for vulnerability in vulnerabilities:
        csv_writer.writerow({
            "Image": image,
            "Vulnerability ID": vulnerability["VulnerabilityID"],
            "Severity": vulnerability["Severity"],
            "Installed Version": vulnerability["InstalledVersion"],
            "Fixed Version": vulnerability.get("FixedVersion", "N/A"),
            "Title": vulnerability.get("Title", "N/A")
        })


def save_to_summary_csv(image: str, summary: Dict[str, int], csv_writer: csv.DictWriter) -> None:
    csv_writer.writerow({
        "Image": image,
        "Total": summary['total'],
        "High": summary['high'],
        "Critical": summary['critical'],
        "Medium": summary['medium'],
        "Low": summary['low']
    })


def generate_html_summary(summaries: List[Dict[str, Any]], filename: str, cluster_name: str, report_date: str) -> None:
    # Calculate total counts for each severity category
    total_summary = {
        'total': sum(summary['total'] for summary in summaries),
        'high': sum(summary['high'] for summary in summaries),
        'critical': sum(summary['critical'] for summary in summaries),
        'medium': sum(summary['medium'] for summary in summaries),
        'low': sum(summary['low'] for summary in summaries),
    }

    html_content = f"""
    <html>
    <head>
        <title>Kubernetes CVE Summary Report</title>
        <style>
            table {{
                width: 100%;
                border-collapse: collapse;
            }}
            th, td {{
                padding: 8px 12px;
                border: 1px solid #ddd;
                text-align: left;
            }}
            th {{
                cursor: pointer;
                background-color: #f2f2f2;
            }}
            .logo {{
                width: 150px;
                height: auto;
            }}
            .author {{
                margin-top: 20px;
                font-weight: bold;
            }}
        </style>
    </head>
    <body>
    <h1>Kubernetes CVE Summary Report</h1>
    <p><strong>Cluster:</strong> {cluster_name}</p>
    <p><strong>Date:</strong> {report_date}</p>
    <img src="../assets/logo.png" alt="Logo" class="logo">

    <h2>Total Vulnerabilities Summary</h2>
    <table>
        <tr>
            <th>Total</th>
            <th>High</th>
            <th>Critical</th>
            <th>Medium</th>
            <th>Low</th>
        </tr>
        <tr>
            <td>{total_summary['total']}</td>
            <td style="color: orange;">{total_summary['high']}</td>
            <td style="color: red;">{total_summary['critical']}</td>
            <td style="color: yellow;">{total_summary['medium']}</td>
            <td style="color: green;">{total_summary['low']}</td>
        </tr>
    </table>

    <h2>Detailed Vulnerability Summary</h2>
    <table id="summaryTable">
    <thead>
    <tr>
        <th onclick="sortTable(0)">Image</th>
        <th onclick="sortTable(1)">Total</th>
        <th onclick="sortTable(2)">High</th>
        <th onclick="sortTable(3)">Critical</th>
        <th onclick="sortTable(4)">Medium</th>
        <th onclick="sortTable(5)">Low</th>
    </tr>
    </thead>
    <tbody>
    """
    for summary in summaries:
        html_content += f"""
        <tr>
            <td>{summary['image']}</td>
            <td>{summary['total']}</td>
            <td style="color: orange;">{summary['high']}</td>
            <td style="color: red;">{summary['critical']}</td>
            <td style="color: yellow;">{summary['medium']}</td>
            <td style="color: green;">{summary['low']}</td>
        </tr>
        """
    html_content += """
    </tbody>
    </table>
    <script>
        function sortTable(n) {{
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("summaryTable");
            switching = true;
            dir = "asc"; 
            while (switching) {{
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {{
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {{
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {{
                            shouldSwitch = true;
                            break;
                        }}
                    }} else if (dir == "desc") {{
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {{
                            shouldSwitch = true;
                            break;
                        }}
                    }}
                }}
                if (shouldSwitch) {{
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;      
                }} else {{
                    if (switchcount == 0 && dir == "asc") {{
                        dir = "desc";
                        switching = true;
                    }}
                }}
            }}
        }}
    </script>
    <div class="author">
        ZERODOTFIVE Hamburg GmbH
    </div>
    </body>
    </html>
    """
    with open(filename, 'w') as f:
        f.write(html_content)
